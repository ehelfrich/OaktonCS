// java class for keyboard I/Oimport java.util.Scanner;public class testNL {    //integral constants used for menu options    public static final short DEFAULT_CONSTRUCTOR = 1;    public static final short ASSIGNMENT_CONSTRUCTOR = 2;    public static final short ARRAY_CONSTRUCTOR = 3;    public static final short COPY_CONSTRUCTOR = 4;    public static final short LENGTH = 5;    public static final short SUM = 6;    public static final short MINIMUM = 7;    public static final short MAXIMUM = 8;    public static final short AVERAGE = 9;    public static final short IS_IN = 10;    public static final short APPEND = 11;    public static final short REMOVE_LAST = 12;    public static final short SORT = 13;    public static final short GET_NUMS = 14;    public static final short INSERT = 15;    public static final short EXIT = 16;    //String constants used for menu options    public static final String OP1 = "(1) DEFAULT CONSTRUCTOR\n";    public static final String OP2 = "(2) ASSIGNMENT CONSTRUCTOR\n";    public static final String OP3 = "(3) ARRAY CONSTRUCTOR\n";    public static final String OP4 = "(4) COPY CONSTRUCTOR\n";    public static final String OP5 = "(5) GET LENGTH\n";    public static final String OP6 = "(6) SUM\n";    public static final String OP7 = "(7) MINIMUM\n";    public static final String OP8 = "(8) MAXIMUM\n";    public static final String OP9 = "(9) AVERAGE\n";    public static final String OP10 = "(10) IS IN\n";    public static final String OP11 = "(11) APPEND\n";    public static final String OP12 = "(12) REMOVE LAST NUMBER\n";    public static final String OP13 = "(13) SORT\n";    public static final String OP14 = "(14) GET NUMBERS FROM USER\n";    public static final String OP15 = "(15) INSERT\n";    public static final String OP16 = "(16) EXIT\n";    //array used to test array assignment constructor    public static final double TEMP_ARRAY[] = {2, 4, 6, 8, 10, 12};    //used to store numbers from the user    public static double number;    //used in loops to determine if the user wishes to try the option again    public static char tryAgain;    //declaration of main program    public static void main(String[] args) {        runMenus();    }    //function that prints the options menu    public static void printMenuOptions() {        System.out.print(OP1 + OP2 + OP3 + OP4 + OP5 + OP6 + OP7 + OP8 + OP9 + OP10                + OP11 + OP12 + OP13 + OP14 + OP15 + OP16);    }    //diver method that tests each menu option    public static void runMenus() {        int option;        //used in test for array constructor        NumberList N3 = new NumberList(TEMP_ARRAY);        Scanner console = new Scanner(System.in);        while (true) {            System.out.println("Choose from the following: \n");            printMenuOptions();            option = console.nextInt();            if (option == EXIT) {                System.out.println("Good-bye. \n");                break;            }            switch (option) {                case DEFAULT_CONSTRUCTOR:                    System.out.println("Testing default constructor.\n");                    System.out.println("The list is: ");                    NumberList N1 = new NumberList();                    N1.print();                    System.out.println();                    System.out.println("The list length is " + N1.length());                    break;                case ASSIGNMENT_CONSTRUCTOR:                    int count;                    System.out.println("Testing ASSIGNMENT CONSTRUCTOR\n");                    System.out.print("How many numbers do you want in the list? ");                    count = console.nextInt();                    System.out.print("What number do you want in the list? ");                    number = console.nextDouble();                    NumberList N2 = new NumberList(count, number);                    System.out.println("The list N2 is: ");                    N2.print();                    System.out.println();                    System.out.println("The list length is " + N2.length());                    System.out.println();                    break;                case ARRAY_CONSTRUCTOR:                    System.out.println("Testing ARRAY CONSTRUCTOR\n");                    System.out.println("The list N3 is: ");                    N3.print();                    System.out.println("\nThe list length is " + N3.length());                    System.out.println();                    break;                case COPY_CONSTRUCTOR:                    NumberList N4 = new NumberList(N3);                    System.out.println("Testing COPY CONSTRUCTOR\n");                    System.out.println("A copy of list N3 is: ");                    N4.print();                    System.out.println("\nThe length of list N4 is " + N4.length());                    System.out.println();                    break;                case LENGTH:                    System.out.println("Testing LENGTH method\n");                    System.out.println("The length of list N3 is: " + N3.length());                    System.out.println();                    break;                case SUM:                    System.out.println("Testing SUM method\n");                    N3.print();                    System.out.println("\nThe sum of list N3 is: " + N3.sum() + "\n");                    break;                case MINIMUM:                    System.out.println("Testing MINIMUM method\n");                    N3.print();                    System.out.println("\nThe smallest value in list N3 is: "                            + N3.min() + "\n");                    break;                case MAXIMUM:                    System.out.println("Testing MAXIMUM method.\n");                    N3.print();                    System.out.println("\nThe largest value in list N3 is: "                            + N3.max() + "\n");                    break;                case AVERAGE:                    System.out.println("Testing AVERAGE method\n");                    N3.print();                    System.out.println("\nThe average value in list N3 is: "                            + N3.ave() + "\n");                    break;                case IS_IN:                    System.out.println("Testing IS_IN method");                    System.out.println("List N3 is ");                    N3.print();                    while (true) {                        System.out.print("\nEnter a number to test ");                        number = console.nextDouble();                        if (N3.isIn(number))                            System.out.println(number + " is in list N3.");                        else                            System.out.println(number + " is NOT in list N3.");                        System.out.println("Try again? (y = yes, n = no) ");                        tryAgain = console.next().charAt(0);                        if (tryAgain == 'n')                            break;                    }                    System.out.println("\n");                    break;                case APPEND:                    System.out.println("Testing append method: ");                    System.out.println("List N3 is ");                    N3.print();                    while (true) {                        System.out.print("\nEnter a number to add to the end of the "                                + "list ");                        number = console.nextDouble();                        if (N3.append(number)) {                            System.out.println("Append successful. List N3 is:");                            N3.print();                        } else                            System.out.println("List is full, cannot append.");                        System.out.println("\nTry again? (y = yes, n = no) ");                        tryAgain = console.next().charAt(0);                        if (tryAgain == 'n')                            break;                    }                    System.out.println("\n");                    break;                case REMOVE_LAST:                    System.out.println("Testing remove last number: ");                    System.out.println("List N3 before remove is ");                    N3.print();                    while (true) {                        if (N3.removeLastElement()) {                            System.out.println("\nRemove successful. List N3 is ");                            N3.print();                            System.out.println();                        } else                            System.out.println("List is empty, cannot remove.");                        System.out.println("Try again? (y = yes, n = no) ");                        tryAgain = console.next().charAt(0);                        if (tryAgain == 'n')                            break;                    }                    System.out.println("\n");                    break;                case SORT:                    System.out.println("Testing sort method: ");                    System.out.println("List N3 before sort is ");                    N3.print();                    char sortType;                    while (true) {                        System.out.println("\nEnter a for sort ascending, d for "                                + "sort descending.\n\n");                        sortType = console.next().charAt(0);                        if (sortType == 'A' || sortType == 'a') {                            System.out.println("Sort Ascending. List N3 is:\n");                            N3.sort(sortType);                            N3.print();                            System.out.println();                        } else if (sortType == 'D' || sortType == 'd') {                            System.out.println("Sort Descending. List N3 is:\n");                            N3.sort(sortType);                            N3.print();                            System.out.println();                        } else                            System.out.println("Invalid sort type.\n");                        System.out.println("Try again? (y = yes, n = no) ");                        tryAgain = console.next().charAt(0);                        if (tryAgain == 'n')                            break;                    }                    System.out.println("\n");                    break;                case GET_NUMS:                    System.out.println("Testing READ (get numbers from user) method");                    NumberList temp = new NumberList();                    temp.get();                    System.out.println("The number list you created is: \n");                    temp.print();                    System.out.println("\n");                    break;                case INSERT:                    System.out.println("Testing insert: ");                    System.out.println("List N3 before insert is \n");                    N3.print();                    int location;                    while (true) {                        System.out.print("\nEnter a number to insert ");                        number = console.nextDouble();                        System.out.print("Where in the list do you want to insert " + number + "? ");                        location = console.nextInt();                        if (N3.insert(number, location)) {                            System.out.println("Insert successful. List N3 is:\n");                            N3.print();                            System.out.println();                        } else                            System.out.println("List is full, cannot insert. \n\n");                        System.out.println("Try again? (y = yes, n = no) ");                        tryAgain = console.next().charAt(0);                        if (tryAgain == 'n')                            break;                    }                    System.out.println("\n");                    break;            }//end switch        }//end while loop    }//end run menus}//end class definition		